import { BlockContext, IActionsBlock, IButtonElement, IContextBlock, IDatePickerElement, IDividerBlock, IElement, IImageBlock, IInputBlock, IMultiStaticSelectElement, IOverflowElement, ISectionBlock, IStaticSelectElement, ILinearScaleElement } from '../blocks';
import { IParser } from '../parsers/IParser';
import { ElementRenderer } from '../renderers/ElementRenderer';
import { UiKitParserText } from './text';
export declare abstract class UiKitParserBanner extends UiKitParserText implements IParser<unknown> {
    divider: ElementRenderer<unknown, IDividerBlock>;
    section: ElementRenderer<unknown, ISectionBlock>;
    image: ElementRenderer<unknown, IImageBlock>;
    actions: ElementRenderer<unknown, IActionsBlock>;
    context: ElementRenderer<unknown, IContextBlock>;
    button: (element: IButtonElement, context: BlockContext, index: number) => unknown;
    datePicker: (element: IDatePickerElement, context: BlockContext, index: number) => unknown;
    staticSelect: (element: IStaticSelectElement, context: BlockContext, index: number) => unknown;
    multiStaticSelect: (element: IMultiStaticSelectElement, context: BlockContext, index: number) => unknown;
    overflow: (element: IOverflowElement, context: BlockContext, index: number) => unknown;
    input: ElementRenderer<unknown, IInputBlock>;
    plainInput: ElementRenderer<unknown, IElement>;
    linearScale: ElementRenderer<unknown, ILinearScaleElement>;
    renderAccessories: any;
    renderActions: any;
    renderContext: any;
    renderInputs: any;
}
export declare const uiKitBanner: (parser: IParser<unknown>, conditions?: import("../blocks").Conditions) => (blocks: unknown) => unknown;
