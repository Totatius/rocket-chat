function module(t,e,i){let s,h,r,a;i.link("@babel/runtime/helpers/classPrivateFieldLooseBase",{default(t){s=t}},0),i.link("@babel/runtime/helpers/classPrivateFieldLooseKey",{default(t){h=t}},1),i.export({RecordList:()=>n}),i.link("@rocket.chat/emitter",{Emitter(t){r=t}},0),i.link("../asyncState",{AsyncStatePhase(t){a=t}},1);class n extends r{constructor(){super(...arguments),Object.defineProperty(this,o,{writable:!0,value:void 0}),Object.defineProperty(this,d,{writable:!0,value:void 0}),Object.defineProperty(this,u,{writable:!0,value:void 0}),Object.defineProperty(this,l,{writable:!0,value:void 0}),Object.defineProperty(this,c,{writable:!0,value:void 0}),Object.defineProperty(this,m,{writable:!0,value:void 0}),s(this,o)[o]=!1,s(this,d)[d]=new Map,s(this,u)[u]=a.LOADING,s(this,l)[l]=void 0,s(this,c)[c]=void 0,s(this,m)[m]=Promise.resolve()}filter(t){return!0}compare(t,e){return t._updatedAt.getTime()-e._updatedAt.getTime()}get phase(){return s(this,u)[u]}get items(){return s(this,l)[l]||(s(this,l)[l]=Array.from(s(this,d)[d].values()).sort(this.compare)),s(this,l)[l]}get itemCount(){var t;return null!==(t=s(this,c)[c])&&void 0!==t?t:s(this,d)[d].size}insert(t){s(this,d)[d].set(t._id,t),this.emit("".concat(t._id,"/inserted"),t),"number"==typeof s(this,c)[c]&&s(this,c)[c]++,s(this,o)[o]=!0}update(t){s(this,d)[d].set(t._id,t),this.emit("".concat(t._id,"/updated"),t),s(this,o)[o]=!0}delete(t){s(this,d)[d].delete(t),this.emit("".concat(t,"/deleted")),"number"==typeof s(this,c)[c]&&s(this,c)[c]--,s(this,o)[o]=!0}push(t){const e=s(this,d)[d].has(t._id),i=this.filter(t);!e||i?e&&i?this.update(t):!e&&i&&this.insert(t):this.delete(t._id)}async mutate(t){try{s(this,u)[u]===a.RESOLVED&&(s(this,u)[u]=a.UPDATING,this.emit("mutating")),s(this,m)[m]=s(this,m)[m].then(t),await s(this,m)[m]}catch(e){this.emit("errored",e)}finally{const t=s(this,o)[o];s(this,u)[u]=a.RESOLVED,t&&(s(this,l)[l]=void 0,s(this,o)[o]=!1),this.emit("mutated",t)}}batchHandle(t){return this.mutate(async()=>{const e=await t();if(e.items)for(const t of e.items)this.push(t);e.itemCount&&(s(this,c)[c]=e.itemCount,s(this,o)[o]=!0)})}prune(t){return this.mutate(()=>{for(const e of s(this,d)[d].values())t(e)&&this.delete(e._id)})}handle(t){return this.mutate(()=>{this.push(t)})}remove(t){return this.mutate(()=>{s(this,d)[d].has(t)&&this.delete(t)})}clear(){return this.mutate(()=>{0!==s(this,d)[d].size&&(s(this,d)[d].clear(),s(this,l)[l]=void 0,s(this,c)[c]=void 0,s(this,o)[o]=!0,this.emit("cleared"))})}}var o=h("hasChanges"),d=h("index"),u=h("phase"),l=h("items"),c=h("itemCount"),m=h("pedingMutation")}

